js_import mqtt.js ;
js_set     $mqtt_client_id mqtt.setClientId;

log_format mqtt '$remote_addr [$time_local] $protocol $status $bytes_received ' 
                '$bytes_sent $upstream_addr $mqtt_client_id'; # Include MQTT ClientId

upstream mosquitto_mq {
    server mosquitto:1883; #node1
    zone tcp_mem 64k;
    hash $mqtt_client_id consistent; # Session persistence keyed against ClientId
}

server {
    listen 8883 ssl;
    
	preread_buffer_size 1k; # Big enough to read CONNECT packet header
    js_preread mqtt.preread_verify; # Parse CONNECT packet for ClientId

	ssl_certificate     ssl/node.crt;
    ssl_certificate_key ssl/node.key;
	ssl_client_certificate ssl/wisca.crt;
	
	ssl_verify_client on;
	
    #ssl_ciphers         HIGH:!aNULL:!MD5;
    #ssl_session_cache   shared:SSL:128m; # 128MB ~= 500k sessions
    #ssl_session_tickets on;
    #ssl_session_timeout 8h;

    proxy_pass mosquitto_mq;
    proxy_connect_timeout 1s;

    access_log /var/log/nginx/mqtt_access.log mqtt;
    error_log  /var/log/nginx/mqtt_error.log info; # njs debug logging
}